spring.application.name=restaurant-service
# MySQL datasource config
spring.datasource.url=jdbc:mysql://localhost:3306/foodie_db?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root@123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate config
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Server port
server.port=8082
server.servlet.context-path=/restaurant-service

# Kafka broker connection (ZooKeeper is used internally by broker)
spring.kafka.bootstrap-servers=localhost:9092

# Consumer configuration
spring.kafka.consumer.group-id=your-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Listener configuration
spring.kafka.listener.missing-topics-fatal=false



#logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

logging.level.com.foodie.restaurantservice=DEBUG



user.service.url=http://localhost:8086/user-service/
restaurant.service.url=http://localhost:8082/restaurant-service/
